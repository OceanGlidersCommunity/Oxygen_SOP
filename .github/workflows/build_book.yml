name: deploy-site

# Only run this when the main branch changes
on:
  push:
    branches:
    - main
  pull_request:
  workflow_dispatch:

# This job installs dependencies, builds the book, and pushes it to `gh-pages`
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.repository == 'OceanGlidersCommunity/Oxygen_SOP'
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v3

      # Install dependencies
      - name: Cache conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          mamba-version: '*'
          channel-priority: strict
          activate-environment: test_env_xgcm # Defined in ci/environment.yml
          auto-update-conda: false
          python-version: 3.9
          environment-file: environment.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

      # Build the book
      - name: Build the book
        run: |
          jupyter-book build .

      # Zip the site (so it can be handed to the preview action)
      - name: Zip the site
        run: |
          set -x
          set -e
          if [ -f site.zip ]; then
              rm -rf site.zip
          fi
          zip -r site.zip ./_build/html
      - uses: actions/upload-artifact@v2
        with:
          name: site-zip
          path: ./site.zip

      # Push the site's HTML to github-pages (only if on main, previews are sent to netlify)
      - name: Deploy to GitHub pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_build/html
          enable_jekyll: false
               
      - name: Build the book as pdf #This needs to happen after the site is zipped, since this builds different html that we dont want on the website
        run: |
           jupyter-book build . --builder pdfhtml
      
      - uses: actions/upload-artifact@v2
        with:
           name: book-pdf
           path: _build/pdf/book.pdf
